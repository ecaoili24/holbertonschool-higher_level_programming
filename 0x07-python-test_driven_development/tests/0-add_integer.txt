=============================
The ''add_integer'' module
=============================

Using ''add_integer''
----------------------

Import file
    >>> add_integer = __import__('0-add_integer').add_integer

Test for Two Integers:
    >>> add_integer(1, 3)
    4

Test for Zero and Integer:
     >>> add_integer(0, 3.1)
     3

Test for Negative Integers:
    >>> add_integer(-1, -3)
    -4

Test for Two floats:
    >>> add_integer(1.3, 3.1)
    4

Test for Integer and Float:
    >>> add_integer(1.3, 3)
    4

Test for Positive and Negative Integers:
    >>> add_integer(1,-3)
    -2

Test for Two Strings:
    >>> add_integer('One', 'Three')
    Traceback (most recent call last):
    TypeError: a must be an integer

Test for String and Integer:
    >>> add_integer('One', 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

Test for Float and String:
    >>> add_integer(1.3, 'Three')
    Traceback (most recent call last):
    TypeError: b must be an integer

Test for No Arguments:
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

Test for One Argument:
    >>> add_integer(5)
    103

Test for String Without Quotes:
    >>> add_integer(NULL)
    Traceback (most recent call last):
    NameError: name 'NULL' is not defined

Test for Casting Character To Integer:
    >>> add_integer(int('B'))
    Traceback (most recent call last):
    ValueError: invalid literal for int() with base 10: 'B'

Test for Casting Character to Float:
    >>> add_integer(float('B'))
    Traceback (most recent call last):
    ValueError: could not convert string to float: 'B'

Test for Float NaN:
    >>> add_integer(3, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

Test for Float Overflow:
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
